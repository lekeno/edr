# **** Customization of the overlay layout ****
# To avoid overwriting your customized layout when updating, make a copy of this file
# and name it user_igm_config.v9.ini 
#
# If you already had a custom layout for a prior version:
#  1. rename user_igm_config.v8.ini to user_igm_config.v9.ini
#  2. copy the [mining] and [mining-graph] sections at the end of this file
#  3. paste these sections in your custom layout file, i.e. user_igm_config.v9.ini
#  4. adjust the values in user_igm_config.v9.ini to match your custom layout
#
# How-To
#  - EDMCOverlay is using a virtual screen with the following dimensions: 1280x960
#    Positions and sizes should be set with that in mind
#  - [general] contains font dimensions
#              float are accepted (e.g. large_width = 11.5)
#              tweak the width if the centering is off
#              tweak the height if the lines overlap or if you want more spacing
#  - [sitrep]  represents the layout for Sitrep (i.e. info shown when jumping to a system)
#  - [warning] represents the layout for the warning shown when a dangerous cmdr has been spotted
#  - [warning-legal] represents the layout for the sparklines (bar graph) giving a quick overview of a dangerous cmdr's legal records
#  - [intel]   represents the layout for Intel (i.e. info shown for o7 and !who comms command)
#  - [intel-legal] represents the layout for the sparklines (bar graph) giving a quick overview of a cmdr's legal records
#  - [notice]  represents the layout used for EDR info (e.g. the warmup message when starting a new game)
#  - [help]    represents the layout used for help content (e.g. !help command)
#  - [navigation] represents the layout used for showing guidance toward a planetary destination (e.g. !nav command)
#  - [docking] represents the layout used for docking guidance
#  - [docking-station] represents the layout used for the docking schematic
#  - [mining] represents the layout used for mining guidance
#  - [mining-graphs] represents the layout used for the mining graphs
#  - [target-guidance] represents the layout used for target guidance
#  - [target-guidance-graphs] represents the layout used for the target guidance graphs
#  - [biology] represents the layout used for showing guidance when scanning biological elements on a planet
#  - [TODO section on navroute]
#
#  header_ are the variables used for the first line of each block (i.e. the headline)
#  body_ are the variables used for the body of each block (i.e. the details)
#  x is the horizontal position within the virtual screen of 1280x960 pixels. 0<= x <=1280
#  y is the vertical position within the virtual screen of 1280x960 pixels. 0 <= y <= 960
#  rgb the hexadecimal color code. Do not include the # sign.
#    See https://en.wikipedia.org/wiki/Web_colors#Converting_RGB_to_hexadecimal
# size is the font size (normal or large)
# len represents the maximum number of characters allowed per line
# ttl represents how long a line is displayed in seconds
# align can be either left or center. Beware that centering is approximate and tedious to tweak
# body_rows represents the number of rows allowed for a given block's main content.
#  Note: headers are always one single line and don't have a _rows variable
# panel: allows you to show a particular layout against a backdrop color for legibility
# panel = True if you want a panel, False otherwise. Add the other parameters if you set this to True.
# panel_x = horizontal position of the top left corner
# panel_y = vertical position of the top left corner
# panel_x2 = horizontal position of the bottom right corner
# panel_y2 = vertical position of the bottom right corner
# panel_rgb = color for the outline of the panel, in rgb format without the # sign
# panel_fill = fill color for the panel, in rgb format without the # sign 
# panel_ttl = represents how long the panel stays visible, in seconds
#
# [warning-legal] and [intel-legal]
# These sections are to control the layout and style of visual representation of a cmdr's legal record
# The graphs show up to a year worth's scans, with the current month on the right edge.
# Clean and Wanted graphs have the same vertical scale to facilitate relative comparisons.
#
# This feature can also be controlled via the following parameter:
#  - enabled = True if you want to see the visuals, False if you don't
#
# For the panel_fill value, it is recommended to use a rgba value that's almost fully transparent
# This is due to a limitation of the overlay where the panel is not always drawn in the expected order
# thereby covering other elements. For instance, use 01 for the alpha channel, e.g. 5B260801
#
# Custom style for the bar graphs
# Each bar graph has a set of variables prefixed by the name of the graph, e.g. clean_, wanted_, bounties_
#  - clean_   : graph that shows the number of clean scans in a given month
#  - wanted_  : graph that shows the number of wanted scans in a given month
# - bounties_ : graph that shows the highest known bounty in a given month
#
# Variables (where type is one of clean, wanted, bounties):
#  - type_x     : where the graph starts on the horizontal axis of the screen
#  - type_y     : where the graph starts on the vertical axis of the screen
#  - type_bar_h : the maximal height of the bars for the graph named type, e.g. clean_bar_h = 16
#  - type_bar_w : the width of the bars for the graph named type, e.g. clean_bar_w = 3
#  - type_bar_s : the spacing between each bars for the graph named type, e.g. clean_bar_s = 1
#  - type_ttl   : represents how long the graph named type stays visible, in seconds
#  - type_rgb   : represents the color palette to use for different ranges (see below for further explanations)
#
# Color palette
# a list of rgb colors separated by commas (no space allowed!)
#  - clean_fill and wanted_fill: color1,color2,color3,color4,color5
#      color1: neutral color when there is either no data or if the number of clean/wanted scans in a given month is zero
#      color2: color used for when the number of clean/wanted scans in a given month is between 1 and 9 included
#      color3: color used for when the number of clean/wanted scans in a given month is between 10 and 99 included
#      color4: color used for when the number of clean/wanted scans in a given month is between 100 and 999 included
#      color5: color used for when the number of clean/wanted scans in a given month exceeds or equals 10000
#
#  - bounties_fill: color1,color2,color3,color4,color5,color6,color7,color8,color9,color10
#      color1: neutral color when there is either no data or if the highest bounty in a given month is zero credits
#      color2: color used for when the highest bounty in a given month is stricly less than 1k    credits (1000 credits)
#      color3: color used for when the highest bounty in a given month is stricly less than 10k   credits
#      color4: color used for when the highest bounty in a given month is stricly less than 100k  credits
#      color5: color used for when the highest bounty in a given month is stricly less than 1m    credits (1 million credits)
#      color6: color used for when the highest bounty in a given month is stricly less than 10m   credits
#      color7: color used for when the highest bounty in a given month is stricly less than 100m  credits
#      color8: color used for when the highest bounty in a given month is stricly less than 1b    credits
#      color9: color used for when the highest bounty in a given month is stricly less than 10b   credits
#      color10: color used for when the highest bounty in a given month exceeeds or equals  10b   credits
#
# - clean_rgb, wanted_rgb, bounties_rgb: color1,color2,color3,color4,color5,color6,color7,color8,color9,color10,color11,color12
#      This is useful to higlight a specific time span (months). The default scheme is designed to highlight the current month.
#      color# : color of the outline for each bar. 12 is the current month, 11 is one month ago, and so on.
#      leave a color empty if you only want a bar with the fill color and no outline
#
# [docking-station]
# This feature shows a diagram of statioports with the corresponding landing pad highlighted
# - enabled   : True or False to enable or disable the diagram
#
# For the panel_fill value, it is recommended to use a rgba value that's almost fully transparent
# This is due to a limitation of the overlay where the panel is not always drawn in the expected order
# thereby covering other elements. For instance, use 01 for the alpha channel, e.g. 5B260801
#
# Customization of the diagram's color
# - schema_x       : x coordinate of the upper-left corner of the area in which the diagram is displayed
# - schema_y       : y coordinate of the upper-left corner of the area in which the diagram is displayed
# - schema_w       : width of the area in which the diagram is displayed
# - schema_h       : height of the area in which the diagram is displayed
# - schema_rgb     : comma separated list of colors for each part of the diagram (red light, green light, wireframe1, wireframe2, wireframe3, small pad, medium pad, large pad
# - schema_fill    : comma separated list of filling colors for parts of the diagram (red light, green light)
#
# [mining-graphs]
# This feature shows graphs giving insights into how effective your mining is for valuable minerals (LTD/Painite/Void Opals)
# - enabled   : True or False to enable or disable the graphs
#
# For the panel_fill value, it is recommended to use a rgba value that's almost fully transparent
# This is due to a limitation of the overlay where the panel is not always drawn in the expected order
# thereby covering other elements. For instance, use 01 for the alpha channel, e.g. 5B260801
#
# Customization of the diagram's color
# - yield_* variables are related to the timeline showing the % of valuable minerals in prospected asteroids
# - efficiency_* variables are related to the timeline showing the # of valuable minerals refined per hour
# - distribution_* variables are related to graph showing a distribution of valuable minerals yields (% of valuable minerals in prospected asteroids thus far)
#
# For each type of graph noted above:
#  - type_x     : where the graph starts on the horizontal axis of the screen
#  - type_y     : where the graph starts on the vertical axis of the screen
#  - type_bar_h : the maximal height of the bars for the graph named type, e.g. yield_bar_h = 16
#  - type_bar_w : the width of the bars for the graph named type, e.g. yield_bar_w = 3
#  - type_bar_s : the spacing between each bars for the graph named type, e.g. yield_bar_s = 1
#  - type_ttl   : represents how long the graph named type stays visible, in seconds
#  - type_rgb   : comma separated list of colors (same number of colors for both _fill and _rgb variables). Used to pick a color for the outline of a bar, in relation to a reference value (e.g. 100% or max).
#  - type_fill  : comma separated list of colors (same number of colors for both _fill and _rgb variables). Used to pick a color for filling the inside of a bar, in relation to a reference value (e.g. 100% or max).
#
# [bounty-hunting-graphs]
# This feature shows graphs giving insights into how effective your bounty hunting is
# - enabled   : True or False to enable or disable the graphs
#
# For the panel_fill value, it is recommended to use a rgba value that's almost fully transparent
# This is due to a limitation of the overlay where the panel is not always drawn in the expected order
# thereby covering other elements. For instance, use 01 for the alpha channel, e.g. 5B260801
#
# Customization of the diagram's color
# - bounty_* variables are related to the timeline showing the bounties revealed by scanning ships
# - efficiency_* variables are related to the timeline showing progress on rewarded bounties
# - distribution_* variables are related to a graph showing a distribution of bounty awards
#
# For each type of graph noted above:
#  - type_x     : where the graph starts on the horizontal axis of the screen
#  - type_y     : where the graph starts on the vertical axis of the screen
#  - type_bar_h : the maximal height of the bars for the graph named type, e.g. yield_bar_h = 16
#  - type_bar_w : the width of the bars for the graph named type, e.g. yield_bar_w = 3
#  - type_bar_s : the spacing between each bars for the graph named type, e.g. yield_bar_s = 1
#  - type_ttl   : represents how long the graph named type stays visible, in seconds
#  - type_rgb   : comma separated list of colors (same number of colors for both _fill and _rgb variables). Used to pick a color for the outline of a bar, in relation to a reference value (e.g. 100% or max).
#  - type_fill  : comma separated list of colors (same number of colors for both _fill and _rgb variables). Used to pick a color for filling the inside of a bar, in relation to a reference value (e.g. 100% or max).
#
#
# [target-guidance-graph] 
# This feature shows historical graphs about your target's shield, hull and subsystems.
# - enabled   : True or False to enable or disable the graphs
#
# For the panel_fill value, it is recommended to use a rgba value that's almost fully transparent
# This is due to a limitation of the overlay where the panel is not always drawn in the expected order
# thereby covering other elements. For instance, use 01 for the alpha channel, e.g. 5B260801
#
# Customization of the diagram's color
# - shield_* variables are related to the timeline showing the health of your target's shield
# - hull_* variables are related to the timeline showing the health of your target's hull
# - subsys_* variables are related to the timeline showing the health of your target's subsystem (the one currently targeted)
#
# For each type of graph noted above:
#  - type_x     : where the graph starts on the horizontal axis of the screen
#  - type_y     : where the graph starts on the vertical axis of the screen
#  - type_bar_h : the maximal height of the bars for the graph named type, e.g. yield_bar_h = 16
#  - type_bar_w : the width of the bars for the graph named type, e.g. yield_bar_w = 3
#  - type_bar_s : the spacing between each bars for the graph named type, e.g. yield_bar_s = 1
#  - type_ttl   : represents how long the graph named type stays visible, in seconds
#  - type_rgb   : comma separated list of colors
#      - shield_rgb: has 3 colors. First one is when the shield is up, Second one is when the shield is down (recovering), Third one is for the "trend zone" delimiter
#      - hull_rgb: has 2 colors. First one is for the hull health, Second one is for the "trend zone" delimiter
#      - subsys_rgb: has 2 colors. First one is for the subsystem health, Second one is for the "trend zone" delimiter
#
#
#
[general]
large_height = 28
large_width = 14
normal_height = 18
normal_width = 8

[sitrep]
enabled = True
header_x = 50
header_y = 210
header_rgb = dd5500
header_size = large
header_len = 120
header_ttl = 31
header_align = left
body_x = 50
body_y = 240
body_rgb = ffffff
body_size = normal
body_len = 100
body_ttl = 30
body_align = left
body_rows = 10
panel = False

[warning]
enabled = True
header_x = 342
header_y = 0
header_rgb = ff0000
header_size = large
header_len = 120
header_ttl = 21
header_align = left
body_x = 410
body_y = 30
body_rgb = ffffff
body_size = normal
body_len = 150
body_ttl = 20
body_align = left
body_rows = 5
panel = False

[warning-legal]
enabled = True
panel = True
panel_x = 344
panel_y = 30
panel_x2 = 56
panel_y2 = 66
panel_rgb = ff0000
panel_fill = 5B260801
panel_ttl = 20
clean_x = 348
clean_y = 50
clean_bar_h = 16
clean_bar_w = 3
clean_bar_s = 1
clean_ttl = 19
clean_fill = E2E2E2,D4E6C9,6EAA48,008000,18F1F5
clean_rgb = ,,,,,,,,,,,9EF5FD
wanted_x = 348
wanted_y = 52
wanted_bar_h = 16
wanted_bar_w = 3
wanted_bar_s = 1
wanted_ttl = 19
wanted_fill = E2E2E2,FFE9E3,F9736C,F9130B,9b00fa
wanted_rgb = ,,,,,,,,,,,9EF5FD
bounties_x = 348
bounties_y = 92
bounties_bar_h = 16
bounties_bar_w = 3
bounties_bar_s = 1
bounties_ttl = 19
bounties_fill = E2E2E2,8d8273,b38a4d,cc8e33,e6931a,ff9800,ff5607,f6412d,ff0000,9b00fa
bounties_rgb = ,,,,,,,,,,,9EF5FD

[intel]
enabled = True
header_x = 342
header_y = 140
header_rgb = dd5500
header_size = large
header_len = 60
header_ttl = 16
header_align = left
body_x = 410
body_y = 170
body_rgb = ffffff
body_size = normal
body_len = 60
body_ttl = 15
body_align = left
body_rows = 5
panel = False

[intel-legal]
enabled = True
panel = True
panel_x = 344
panel_y = 170
panel_x2 = 56
panel_y2 = 66
panel_rgb = dd5500
panel_fill = 5B260801
panel_ttl = 15
clean_x = 348
clean_y = 190
clean_bar_h = 16
clean_bar_w = 3
clean_bar_s = 1
clean_ttl = 14
clean_fill = E2E2E2,D4E6C9,6EAA48,008000,18F1F5
clean_rgb = ,,,,,,,,,,,9EF5FD
wanted_x = 348
wanted_y = 192
wanted_bar_h = 16
wanted_bar_w = 3
wanted_bar_s = 1
wanted_ttl = 14
wanted_fill = E2E2E2,FFE9E3,F9736C,F9130B,9b00fa
wanted_rgb = ,,,,,,,,,,,9EF5FD
bounties_x = 348
bounties_y = 232
bounties_bar_h = 16
bounties_bar_w = 3
bounties_bar_s = 1
bounties_ttl = 14
bounties_fill = E2E2E2,8d8273,b38a4d,cc8e33,e6931a,ff9800,ff5607,f6412d,ff0000,9b00fa
bounties_rgb = ,,,,,,,,,,,9EF5FD

[notice]
enabled = True
header_x = 50
header_y = 830
header_rgb = dd5500
header_size = large
header_len = 80
header_ttl = 16
header_align = left
body_x = 50
body_y = 860
body_rgb = ffffff
body_size = normal
body_len = 90
body_ttl = 15
body_align = left
body_rows = 10
panel = False

[help]
enabled = True
header_x = 60
header_y = 400
header_rgb = dd5500
header_size = large
header_len = 120
header_ttl = 900
header_align = left
body_x = 60
body_y = 430
body_rgb = ffffff
body_size = normal
body_len = 140
body_ttl = 300
body_align = left
body_rows = 40
panel = True
panel_x = 55
panel_y = 395
panel_x2 = 1170
panel_y2 = 450
panel_rgb = dd5500
panel_fill = 22555555
panel_ttl = 300

[navigation]
enabled = True
header_x = 920
header_y = 330
header_rgb = 00b3f7
header_size = large
header_len = 60
header_ttl = 3
header_align = left
body_x = 920
body_y = 360
body_rgb = ffffff
body_size = normal
body_len = 100
body_ttl = 3
body_align = left
body_rows = 5
panel = False

[docking]
enabled = True
header_x = 920
header_y = 330
header_rgb = dd5500
header_size = normal
header_len = 60
header_ttl = 180
header_align = left
body_x = 1022
body_y = 360
body_rgb = ffffff
body_size = normal
body_len = 60
body_ttl = 179
body_align = left
body_rows = 5
panel = False

[docking-station]
enabled = True
panel = True
panel_x = 922
panel_y = 360
panel_x2 = 90
panel_y2 = 90
panel_rgb = dd5500
panel_fill = 5B260801
panel_ttl = 179
schema_x = 924
schema_y = 362
schema_w = 86
schema_h = 86
schema_rgb = EC4050,4FF95A,E2E2E2,A0A0A0,5B5B5B,6B6B6B,0094FF,F6AB02,FF3321
schema_fill = E84E60,BEFFE2
schema_ttl = 179
rotate_schematic = False

[mining]
enabled = True
header_x = 920
header_y = 330
header_rgb = dd5500
header_size = large
header_len = 60
header_ttl = 16
header_align = left
body_x = 1022
body_y = 360
body_rgb = F8FF3F
body_size = normal
body_len = 60
body_ttl = 15
body_align = left
body_rows = 6
panel = False

[mining-graphs]
enabled = True
panel = True
panel_x = 922
panel_y = 360
panel_x2 = 90
panel_y2 = 90
panel_rgb = dd5500
panel_fill = 5B260801
panel_ttl = 15
yield_x = 924
yield_y = 400
yield_bar_h = 36
yield_bar_w = 2
yield_bar_s = 1
yield_ttl = 15
yield_fill = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF
yield_rgb = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF
efficiency_x = 924
efficiency_y = 440
efficiency_bar_h = 36
efficiency_bar_w = 2
efficiency_bar_s = 1
efficiency_ttl = 15
efficiency_fill = FFFFFF,FCF5F3,F9EEE8,F6EBDD,F3EBD2,F0EEC7,E5EDBD,D6EAB2,C5E7A8,B1E49F,9AE195,8BDE95,82DB9E,79D8A9,70D5B7,68D2C6,5FC6CF,57ACCC,4F90C9,4772C6,3F53C3,3E38C0,5230BD,6829BA,7F22B8
efficiency_rgb = FFFFFF,FCF5F3,F9EEE8,F6EBDD,F3EBD2,F0EEC7,E5EDBD,D6EAB2,C5E7A8,B1E49F,9AE195,8BDE95,82DB9E,79D8A9,70D5B7,68D2C6,5FC6CF,57ACCC,4F90C9,4772C6,3F53C3,3E38C0,5230BD,6829BA,7F22B8
distribution_x = 988
distribution_y = 440
distribution_bar_h = 16
distribution_bar_w = 3
distribution_bar_s = 0
distribution_ttl = 15
distribution_fill = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF
distribution_rgb = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF

[bounty-hunting]
enabled = True
header_x = 920
header_y = 330
header_rgb = dd5500
header_size = large
header_len = 60
header_ttl = 16
header_align = left
body_x = 1022
body_y = 360
body_rgb = F8FF3F
body_size = normal
body_len = 60
body_ttl = 15
body_align = left
body_rows = 6
panel = False

[bounty-hunting-graphs]
enabled = True
panel = True
panel_x = 922
panel_y = 360
panel_x2 = 90
panel_y2 = 90
panel_rgb = dd5500
panel_fill = 5B260801
panel_ttl = 15
bounty_x = 924
bounty_y = 400
bounty_bar_h = 36
bounty_bar_w = 2
bounty_bar_s = 1
bounty_ttl = 15
bounty_fill = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF
bounty_rgb = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF
efficiency_x = 924
efficiency_y = 440
efficiency_bar_h = 36
efficiency_bar_w = 2
efficiency_bar_s = 1
efficiency_ttl = 15
efficiency_fill = FFFFFF,FCF5F3,F9EEE8,F6EBDD,F3EBD2,F0EEC7,E5EDBD,D6EAB2,C5E7A8,B1E49F,9AE195,8BDE95,82DB9E,79D8A9,70D5B7,68D2C6,5FC6CF,57ACCC,4F90C9,4772C6,3F53C3,3E38C0,5230BD,6829BA,7F22B8
efficiency_rgb = FFFFFF,FCF5F3,F9EEE8,F6EBDD,F3EBD2,F0EEC7,E5EDBD,D6EAB2,C5E7A8,B1E49F,9AE195,8BDE95,82DB9E,79D8A9,70D5B7,68D2C6,5FC6CF,57ACCC,4F90C9,4772C6,3F53C3,3E38C0,5230BD,6829BA,7F22B8
distribution_x = 988
distribution_y = 440
distribution_bar_h = 16
distribution_bar_w = 3
distribution_bar_s = 0
distribution_ttl = 15
distribution_fill = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF
distribution_rgb = 99000B,8C1B1A,7F3729,725338,656F47,588A56,4BA665,3EC274,31DE83,24FA93,33F946,43F954,52FA62,62FA70,72FB7F,81FB8D,91FC9B,A1FCA9,B0FCB7,C0FDC6,D0FDD4,DFFEE2,EFFEF0,FFFFFF

[target-guidance]
enabled = True
header_x = 920
header_y = 460
header_rgb = dd5500
header_size = normal
header_len = 60
header_ttl = 16
header_align = left
body_x = 1022
body_y = 480
body_rgb = F8FF3F
body_size = normal
body_len = 60
body_ttl = 15
body_align = left
body_rows = 5
panel = False

[target-guidance-graphs]
enabled = True
panel = True
panel_x = 922
panel_y = 480
panel_x2 = 90
panel_y2 = 62
panel_rgb = dd5500
panel_fill = 5B260801
panel_ttl = 15
shield_x = 924
shield_y = 482
shield_w = 86
shield_h = 18
shield_rgb = 00b3f7,C63B25,F8FF3F
shield_ttl = 15
hull_x = 924
hull_y = 502
hull_w = 86
hull_h = 18
hull_rgb = f07b05,F8FF3F
hull_ttl = 15
subsys_x = 924
subsys_y = 522
subsys_w = 86
subsys_h = 18
subsys_rgb = 7f00ff,F8FF3F
subsys_ttl = 15

[biology]
enabled = True
header_x = 920
header_y = 530
header_rgb = 00b3f7
header_size = large
header_len = 60
header_ttl = 3
header_align = left
body_x = 920
body_y = 560
body_rgb = ffffff
body_size = normal
body_len = 100
body_ttl = 3
body_align = left
body_rows = 5
panel = False

[navroute]
enabled = True
schema_x = 5
schema_y = 6
schema_w = 1230
schema_h = 0
# route,travelled,current,o,b,a,f,g,k,m,ms,c*,d*(dwarves),h*(blackholes),n,l,Herbig ae/be,t,tts,s,w*,x(exotic),y,rogueplanet,nebula,stellarremnantnebula,other
schema_rgb = D8793E,00B3F7,00B3F7,2423E9,2F2DE3,4C37D2,5C5C93,908E46,CC432A,E9332A,CC0000,55552B,616CE2,808080,3FEFFF,FF2600,F56A79,4A0000,4A0000,3B3B3B,6E6E89,FF00DC,B16C00,FF00DC,FF00DC,4CFF00,FF00CC
# o,b,a,f,g,k,m,c*,d*(dwarves),h*(blackholes),n,l,t,tts,s,w,x(exotic),y,rogueplanet,nebula,stellarremnantnebula,other
schema_marker = circle,circle,circle,circle,circle,circle,circle,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross,cross
# o,b,a,f,g,k,m,c*,d*(dwarves),h*(blackholes),n,l,t,tts,s,w,x(exotic),y,rogueplanet,nebula,stellarremnantnebula,other
# o,b,a,f,g,k,m,ms,c*,d*,h*,n,l,aebe,t,tts,s,w*,x,y,rogueplanet,nebula,stellarremnantnebula,*"
#schema_suffix = o,b,a,f,g,k,m,ms,c*, dwarf, blackhole, neutron,l,Herbig ae/be,t,tts,s,w*, exotic,, rogue, nebula, sr nebula, ???
schema_suffix = ,,,,,,,,, dwarf, blackhole, neutron,,,,,,, exotic,, rogue, nebula, sr nebula, ???
schema_ttl = 18
schema_intervalx = 65
schema_intervaly = 0
schema_symbolintervalx = 16
schema_symbolintervaly = 0
schema_stoplen = 25
panel = True
panel_x = 0
panel_y = 0
panel_x2 = 1310
panel_y2 = 50
panel_rgb = dd5500,
panel_fill = 3C342D01
panel_ttl = 18